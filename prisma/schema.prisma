generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt   @id @default(autoincrement())
  name      String   @unique @db.VarChar(100)
  createdAt DateTime @default(now())
  tasks     Task[]
}

model Task {
  id         BigInt   @id @default(autoincrement())
  name       String   @db.VarChar(300)
  createdAt  DateTime @default(now())
  status     STATUS   @default(IN_PROGRESS)
  userId     BigInt
  belongsTo  User     @relation(fields: [userId], references: [id],onDelete: Cascade)
}

enum STATUS {
  IN_PROGRESS
  COMPLETED
  FAILED
}


// Prisma
// model User {
//   id        BigInt   @id @default(autoincrement())
//   name      String   @unique @db.VarChar(100)
//   createdAt DateTime @default(now())
// }

//Sequalize
// const User = sequelize.define('User', {
//   id: {
//     type: DataTypes.BIGINT,
//     autoIncrement: true,
//     primaryKey: true
//   },
//   name: {
//     type: DataTypes.STRING(100),
//     unique: true,
//     allowNull: false
//   },
//   createdAt: {
//     type: DataTypes.DATE,
//     defaultValue: DataTypes.NOW
//   }
// }, {
//   tableName: 'users',
//   timestamps: false // Because updatedAt is not defined
// });